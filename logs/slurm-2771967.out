[INFO][04:56:17]  training, epoch: 1 / 10, with fold: 0



  0%|          | 0/17 [00:00<?, ?it/s]  0%|          | 0/17 [00:11<?, ?it/s]
images shape torch.Size([32, 1, 64, 64, 64])
0
incoming shape: torch.Size([32, 1, 64, 64, 64])
1
incoming shape: torch.Size([32, 64, 64, 64, 64])
2
incoming shape: torch.Size([32, 128, 32, 32, 32])
3
incoming shape: torch.Size([32, 256, 16, 16, 16])
4
incoming shape: torch.Size([32, 512, 8, 8, 8])
Latent shape torch.Size([32, 1024, 4, 4, 4])
outputs torch.Size([32, 1, 64, 64, 64])
latent features torch.Size([32, 1024, 4, 4, 4])
flattened latent torch.Size([32, 65536])
nodule-type output shape: tensor([[-0.0584, -0.2057,  0.2009,  0.3759],
        [-0.0463, -0.1996,  0.1611,  0.3990],
        [-0.0864, -0.1796,  0.1887,  0.3849],
        [ 0.1196, -0.1118,  0.2639,  0.2658],
        [ 0.0517, -0.0906,  0.2638,  0.4454],
        [ 0.0848, -0.2497,  0.0456,  0.2878],
        [ 0.0482, -0.1390,  0.1040,  0.0525],
        [ 0.2374, -0.1688,  0.0584,  0.2662],
        [ 0.1169, -0.0268,  0.2815,  0.2970],
        [ 0.0671, -0.1686,  0.2453,  0.4491],
        [ 0.1705, -0.2195,  0.1391,  0.4917],
        [ 0.0446, -0.1437,  0.2795,  0.2769],
        [ 0.0165, -0.2472,  0.1427,  0.4075],
        [ 0.1079, -0.1418,  0.1936,  0.3283],
        [ 0.0801, -0.3471,  0.2130,  0.5049],
        [-0.1168, -0.2994,  0.3994,  0.6437],
        [ 0.0704, -0.1899,  0.0465,  0.1434],
        [-0.0366, -0.1172,  0.1425,  0.4341],
        [ 0.1857, -0.2441,  0.2184,  0.3168],
        [-0.0488, -0.1675,  0.2776,  0.3684],
        [ 0.0530, -0.2269,  0.1581,  0.1321],
        [ 0.1165, -0.2064,  0.2133,  0.3620],
        [-0.0210, -0.1941,  0.0999,  0.2357],
        [ 0.0840, -0.1627,  0.1632,  0.2844],
        [-0.0596, -0.2452,  0.0172,  0.4077],
        [ 0.0613, -0.1319,  0.1193,  0.3261],
        [-0.1492, -0.3814,  0.2070,  0.5159],
        [ 0.1054, -0.2860,  0.2454,  0.1628],
        [ 0.0239, -0.0722,  0.1300,  0.2186],
        [ 0.0652, -0.0838,  0.2274,  0.4368],
        [ 0.2012, -0.1557,  0.1940,  0.4334],
        [-0.0224, -0.1994,  0.2452,  0.1907]], device='cuda:0',
       grad_fn=<AddmmBackward0>)
malignancy output shape: torch.Size([32, 1])
noduletype labels shape torch.Size([32, 1])
tensor([3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3,
        3, 3, 3, 2, 3, 3, 3, 2], device='cuda:0')
Traceback (most recent call last):
  File "/scratch-shared/ssommers/train-kieran.py", line 365, in <module>
    nodule_analyzer.train(model)
  File "/scratch-shared/ssommers/train-kieran.py", line 285, in train
    outputs, targets, losses = self.forward(
  File "/scratch-shared/ssommers/train-kieran.py", line 219, in forward
    seg_loss, type_loss, malig_loss, overall_loss = self.model.loss(masks, noduletype_targets, malignancy_targets, outputs)
  File "/gpfs/scratch1/shared/ssommers/probeersel.py", line 220, in loss
    type_loss = F.cross_entropy(result_noduletype, noduletype_labels)
  File "/home/ssommers/.local/lib/python3.9/site-packages/torch/nn/functional.py", line 3029, in cross_entropy
    return torch._C._nn.cross_entropy_loss(input, target, weight, _Reduction.get_enum(reduction), ignore_index, label_smoothing)
RuntimeError: "host_softmax" not implemented for 'Long'

JOB STATISTICS
==============
Job ID: 2771967
Cluster: snellius
User/Group: ssommers/ssommers
State: COMPLETED (exit code 0)
Nodes: 1
Cores per node: 18
CPU Utilized: 00:01:53
CPU Efficiency: 11.41% of 00:16:30 core-walltime
Job Wall-clock time: 00:00:55
Memory Utilized: 215.99 MB
Memory Efficiency: 0.33% of 64.00 GB
